

		/** Handle cors on all browsers ;-) Thanks to C.Zackas: https://www.nczonline.net/blog/2010/05/25/cross-domain-ajax-with-cross-origin-resource-sharing/ **/
		function createCORSRequest(method, url){
			var xhr = new XMLHttpRequest();
			if ("withCredentials" in xhr){
				xhr.open(method, url, true);
			} else if (typeof XDomainRequest != "undefined"){
				xhr = new XDomainRequest();
				xhr.open(method, url);
			} else {
				xhr = null;
			}
			return xhr;
		}

		/** Handle cors on all browsers with auth token - Anna's customization from original C.Zackas **/
		function createAuthCORSRequest(method, url, oauthToken){
			var xhr = new XMLHttpRequest();
			if ("withCredentials" in xhr){
				xhr.open(method, url, true);
				xhr.setRequestHeader('Authorization', 'Bearer ' + oauthToken.access_token)
			} else if (typeof XDomainRequest != "undefined"){
				xhr = new XDomainRequest();
				xhr.open(method, url);
				xhr.setRequestHeader('Authorization', 'Bearer ' + oauthToken.access_token)
			} else {
				xhr = null;
			}
			return xhr;
		}


      /**
       * Print the summary and start datetime/date of the next ten events in
       * the authorized user's calendar. If no events are found an
       * appropriate message is printed.
       */
      function listUpcomingEvents() {
        var request = gapi.client.calendar.events.list({
          'calendarId': CALENDAR_ID,
//          'calendarId': 'primary',
          'timeMin': (new Date()).toISOString(),
          'showDeleted': false,
          'singleEvents': true,
          'maxResults': 10,
          'orderBy': 'startTime'
        });

        request.execute(function(resp) {
          JSON.stringify(resp.items);
          
/*          appendPre('Upcoming events:');

          if (events.length > 0) {
            for (i = 0; i < events.length; i++) {
              var event = events[i];
              var when = event.start.dateTime;
              if (!when) {
                when = event.start.date;
              }
              appendPre(event.summary + ' id:' + event.id + ' (' + when + ')')
            }
          } else {
            appendPre('No upcoming events found.');
          }
*/
        });
      }
      
      

     /**
       * Add an event, print the response (success/fail) 
       * POST https://www.googleapis.com/calendar/v3/calendars/calendarId/events/insert
       */
		function addEvent() {		
			var event = {
			  'summary': 'Lesson with Peter',
			  //'colorId': '', set different colors for different event types
			  'description': 'A lesson with Peter',
			  'start': {
				'dateTime': '2016-04-14T11:00:00+02:00'
//				'timeZone': 'Europe/Zurich'  //needed for recurrent events!
			  },
			  'end': {
				'dateTime': '2016-04-14T11:30:00+02:00'
//				'timeZone': 'Europe/Zurich'  //needed for recurrent events!
			  },
//			  'recurrence': [
//				'RRULE:FREQ=DAILY;COUNT=2'
//			  ],
			  'attendees': [
				{'email': 'anna.amidani@hotmail.it'},
				{'email': 'an5tash@gmail.com'}
			  ],
			  'reminders': {
				'useDefault': false,
				'overrides': [
				  {'method': 'email', 'minutes': 24 * 60},
				  {'method': 'popup', 'minutes': 10}
				]
			  }
			};
			

			var request = gapi.client.calendar.events.insert({
			  'calendarId': CALENDAR_ID,
			  'resource': event,
			  'sendNotifications': false
			});

			request.execute(function(event) {
			  appendPre('Event created: ' + event.htmlLink);
			});
		}
		
		

	 /**
       * Add an event, print the response (success/fail) 
       * POST https://www.googleapis.com/calendar/v3/calendars/calendarId/events/update
       */		
		function updateEvent() {
			var event = {
			  'summary': 'Lesson with Peter Chesley',
			  'description': 'A lesson with Peter Chesley',
			  'start': {
				'dateTime': '2016-04-15T18:00:00+02:00'
			  },
			  'end': {
				'dateTime': '2016-04-15T19:00:00+02:00'
			  },			
			};

			var request = gapi.client.calendar.events.update({
			  'calendarId': CALENDAR_ID,
			  'eventId': '2k6alu5hs21rbgkhco86fo7gk8',
			  'resource': event,
			  'sendNotifications': true
			});

			request.execute(function(event) {
			  appendPre('Event updated: ' + event.htmlLink);
			});
		}

	
	 /**
       * Add an event, print the response (success/fail) 
       * POST https://www.googleapis.com/calendar/v3/calendars/calendarId/events/delete
       */		
		function deleteEvent(EVENT_ID) {
			var request = createAuthCORSRequest("POST", 
												"https://www.googleapis.com/calendar/v3/calendars/"+CALENDAR_ID+"/events/delete?eventId="+EVENT_ID,
												gapi.auth.getToken());

			if (request){
				request.onload = function(){
				  console.log('Deletion result: '+ request.responseText);
				};
				request.send();
			}
		}
      


